{
  /*******************************************************************************/
  /** File Snippets (React) **/
  /*******************************************************************************/
  "Test Stories (describe-it) - React": {
    "scope": "javascript,javascriptreact,typescript,typescriptreact",
    "prefix": "sbrit",
    "body": [
      "import React from 'react';",
      "import { render, screen } from '@testing-library/react';",
      "import '@testing-library/jest-dom';",
      "import { composeStories } from '@storybook/testing-react';",
      "import * as stories from './${1:${TM_FILENAME_BASE/.(?:test).*//gi}}.stories';",
      "",
      "const { $2 } = composeStories(stories);",
      "",
      "describe('components/${1:${TM_FILENAME_BASE/.(?:test).*//gi}}', () => {",
      "\tdescribe('<${2:${1:${TM_FILENAME_BASE/.(?:test).*//gi}}} />', () => {",
      "\t\tit('Rendered in the DOM', () => {",
      "\t\t\trender(<${2:${TM_FILENAME_BASE/.(?:test).*//gi}} />);",
      "\t\t\tconst ${1:${TM_FILENAME_BASE/.(?:test).*//gi}}El = screen.getBy${5:Role}('${6}');",
      "\t\t\texpect(${1:${TM_FILENAME_BASE/.(?:test).*//gi}}El).toHaveAttribute('${7:name}', ${2:${TM_FILENAME_BASE/.(?:test).*//gi}}.args?.${8:${7:name}});",
      "\t\t});${9}",
      "\t});",
      "});"
    ],
    "description": "Scaffold a Test with Storybook, Jest and React (describe-it syntax)"
  },
  "Test Stories (describe-test) - React": {
    "scope": "javascript,javascriptreact,typescript,typescriptreact",
    "prefix": "sbrtest",
    "body": [
      "import React from 'react';",
      "import { render, screen } from '@testing-library/react';",
      "import '@testing-library/jest-dom';",
      "import { composeStories } from '@storybook/testing-react';",
      "import * as stories from './${1:${TM_FILENAME_BASE/.(?:test).*//gi}}.stories';",
      "",
      "const { $2 } = composeStories(stories);",
      "",
      "describe('components/${1:${TM_FILENAME_BASE/.(?:test).*//gi}}', () => {",
      "\tdescribe('<${2:${1:${TM_FILENAME_BASE/.(?:test).*//gi}}} />', () => {",
      "\t\ttest('Rendered in the DOM', () => {",
      "\t\t\trender(<${2:${TM_FILENAME_BASE/.(?:test).*//gi}} />);",
      "\t\t\tconst ${1:${TM_FILENAME_BASE/.(?:test).*//gi}}El = screen.getBy${5:Role}('${6}');",
      "\t\t\texpect(${1:${TM_FILENAME_BASE/.(?:test).*//gi}}El).toHaveAttribute('${7:name}', ${2:${TM_FILENAME_BASE/.(?:test).*//gi}}.args?.${8:${7:name}});",
      "\t\t});${9}",
      "\t});",
      "});"
    ],
    "description": "Scaffold a Test with Storybook, Jest and React (describe-it syntax)"
  },
  "Snapshot Test Stories (describe-it) - React": {
    "scope": "javascript,javascriptreact,typescript,typescriptreact",
    "prefix": "sbritsnap",
    "body": [
      "import React from 'react';",
      "import renderer from 'react-test-renderer';",
      "import { composeStories } from '@storybook/testing-react';",
      "import * as stories from './${1:${TM_FILENAME_BASE/.(?:test).*//gi}}.stories';",
      "",
      "const { $2 } = composeStories(stories);",
      "",
      "describe('components/${1:${TM_FILENAME_BASE/.(?:test).*//gi}}', () => {",
      "\tdescribe('<${2:${1:${TM_FILENAME_BASE/.(?:test).*//gi}}} />', () => {",
      "\t\tit('Run Snapshot Test', () => {",
      "\t\t\tconst ${1:${TM_FILENAME_BASE/.(?:test).*//gi}}El = renderer.create(<${2:${TM_FILENAME_BASE/.(?:test).*//gi}} />).toJSON();",
      "\t\t\texpect(${1:${TM_FILENAME_BASE/.(?:test).*//gi}}El).toMatchSnapshot();",
      "\t\t});${9}",
      "\t});",
      "});"
    ],
    "description": "Scaffold a Snapshot Test with Storybook, Jest and React (describe-it syntax)"
  },
  "Snapshot Test Stories (describe-test) - React": {
    "scope": "javascript,javascriptreact,typescript,typescriptreact",
    "prefix": "sbrtestsnap",
    "body": [
      "import React from 'react';",
      "import renderer from 'react-test-renderer';",
      "import { composeStories } from '@storybook/testing-react';",
      "import * as stories from './${1:${TM_FILENAME_BASE/.(?:test).*//gi}}.stories';",
      "",
      "const { $2 } = composeStories(stories);",
      "",
      "describe('components/${1:${TM_FILENAME_BASE/.(?:test).*//gi}}', () => {",
      "\tdescribe('<${2:${1:${TM_FILENAME_BASE/.(?:test).*//gi}}} />', () => {",
      "\t\ttest('Run Snapshot Test', () => {",
      "\t\t\tconst ${1:${TM_FILENAME_BASE/.(?:test).*//gi}}El = renderer.create(<${2:${TM_FILENAME_BASE/.(?:test).*//gi}} />).toJSON();",
      "\t\t\texpect(${1:${TM_FILENAME_BASE/.(?:test).*//gi}}El).toMatchSnapshot();",
      "\t\t});${9}",
      "\t});",
      "});"
    ],
    "description": "Scaffold a Snapshot Test with Storybook, Jest and React (describe-test syntax)"
  },
  /*******************************************************************************/
  /** File Snippets (Vue) **/
  /*******************************************************************************/
  "Test Stories (describe-it) - Vue": {
    "scope": "javascript,typescript",
    "prefix": "sbvit",
    "body": [
      "import { render, screen } from '@testing-library/vue';",
      "import '@testing-library/jest-dom';",
      "import { composeStories } from '@storybook/testing-vue';",
      "import * as stories from './${1:${TM_FILENAME_BASE/.(?:test).*//gi}}.stories';",
      "",
      "const { $2 } = composeStories(stories);",
      "",
      "describe('components/${1:${TM_FILENAME_BASE/.(?:test).*//gi}}', () => {",
      "\tdescribe('<${2:${1:${TM_FILENAME_BASE/.(?:test).*//gi}}} />', () => {",
      "\t\tit('Rendered in the DOM', () => {",
      "\t\t\trender(<${2:${TM_FILENAME_BASE/.(?:test).*//gi}} />);",
      "\t\t\tconst ${1:${TM_FILENAME_BASE/.(?:test).*//gi}}El = screen.getBy${5:Role}('${6}');",
      "\t\t\texpect(${1:${TM_FILENAME_BASE/.(?:test).*//gi}}El).toHaveAttribute('${7:name}', ${2:${TM_FILENAME_BASE/.(?:test).*//gi}}.args?.${8:${7:name}});",
      "\t\t});${9}",
      "\t});",
      "});"
    ],
    "description": "Scaffold a Test with Storybook, Jest and Vue (describe-it syntax)"
  },
  "Test Stories (describe-test) - Vue": {
    "scope": "javascript,typescript",
    "prefix": "sbvtest",
    "body": [
      "import { render, screen } from '@testing-library/vue';",
      "import '@testing-library/jest-dom';",
      "import { composeStories } from '@storybook/testing-vue';",
      "import * as stories from './${1:${TM_FILENAME_BASE/.(?:test).*//gi}}.stories';",
      "",
      "const { $2 } = composeStories(stories);",
      "",
      "describe('components/${1:${TM_FILENAME_BASE/.(?:test).*//gi}}', () => {",
      "\tdescribe('<${2:${1:${TM_FILENAME_BASE/.(?:test).*//gi}}} />', () => {",
      "\t\ttest('Rendered in the DOM', () => {",
      "\t\t\trender(<${2:${TM_FILENAME_BASE/.(?:test).*//gi}} />);",
      "\t\t\tconst ${1:${TM_FILENAME_BASE/.(?:test).*//gi}}El = screen.getBy${5:Role}('${6}');",
      "\t\t\texpect(${1:${TM_FILENAME_BASE/.(?:test).*//gi}}El).toHaveAttribute('${7:name}', ${2:${TM_FILENAME_BASE/.(?:test).*//gi}}.args?.${8:${7:name}});",
      "\t\t});${9}",
      "\t});",
      "});"
    ],
    "description": "Scaffold a Test with Storybook, Jest and Vue (describe-test syntax)"
  },
  "Snapshot Test Stories (describe-it) - Vue": {
    "scope": "javascript,javascriptreact,typescript,typescriptreact",
    "prefix": "sbvitsnap",
    "body": [
      "import { mount } from '@vue/test-utils';",
      "import { composeStories } from '@storybook/testing-vue';",
      "import * as stories from './${1:${TM_FILENAME_BASE/.(?:test).*//gi}}.stories';",
      "",
      "const { $2 } = composeStories(stories);",
      "",
      "describe('components/${1:${TM_FILENAME_BASE/.(?:test).*//gi}}', () => {",
      "\tdescribe('<${2:${1:${TM_FILENAME_BASE/.(?:test).*//gi}}} />', () => {",
      "\t\tit('Run Snapshot Test', () => {",
      "\t\t\tconst ${1:${TM_FILENAME_BASE/.(?:test).*//gi}}El = mount(${2:${TM_FILENAME_BASE/.(?:test).*//gi}});",
      "\t\t\texpect(${1:${TM_FILENAME_BASE/.(?:test).*//gi}}El).toMatchSnapshot();",
      "\t\t});${9}",
      "\t});",
      "});"
    ],
    "description": "Scaffold a Snapshot Test with Storybook, Jest and Vue (describe-it syntax)"
  },
  "Snapshot Test Stories (describe-test) - Vue": {
    "scope": "javascript,javascriptreact,typescript,typescriptreact",
    "prefix": "sbvtestsnap",
    "body": [
      "import { mount } from '@vue/test-utils';",
      "import { composeStories } from '@storybook/testing-vue';",
      "import * as stories from './${1:${TM_FILENAME_BASE/.(?:test).*//gi}}.stories';",
      "",
      "const { $2 } = composeStories(stories);",
      "",
      "describe('components/${1:${TM_FILENAME_BASE/.(?:test).*//gi}}', () => {",
      "\tdescribe('<${2:${1:${TM_FILENAME_BASE/.(?:test).*//gi}}} />', () => {",
      "\t\ttest('Run Snapshot Test', () => {",
      "\t\t\tconst ${1:${TM_FILENAME_BASE/.(?:test).*//gi}}El = mount(${2:${TM_FILENAME_BASE/.(?:test).*//gi}});",
      "\t\t\texpect(${1:${TM_FILENAME_BASE/.(?:test).*//gi}}El).toMatchSnapshot();",
      "\t\t});${9}",
      "\t});",
      "});"
    ],
    "description": "Scaffold a Snapshot Test with Storybook, Jest and Vue (describe-test syntax)"
  },
  /*******************************************************************************/
  /** Single Test Block (React) **/
  /*******************************************************************************/
  "Single Test Block (describe-it) - React": {
    "scope": "javascript,javascriptreact,typescript,typescriptreact",
    "prefix": "sbritb",
    "body": [
      "it('${1:Rendered in the DOM}', () => {",
      "\trender(<${2:${TM_FILENAME_BASE/.(?:test).*//gi}} />);",
      "\tconst ${3:${TM_FILENAME_BASE/.(?:test).*//gi}}El = screen.getBy${4:Role}('${5}');",
      "\texpect(${3:${TM_FILENAME_BASE/.(?:test).*//gi}}El).toHaveAttribute('${6:name}', ${2:${TM_FILENAME_BASE/.(?:test).*//gi}}.args?.${7:${6:name}});",
      "});"
    ],
    "description": "Single Test Block with Storybook, Jest and React (describe-it syntax)"
  },
  "Single Test Block (describe-test) - React": {
    "scope": "javascript,javascriptreact,typescript,typescriptreact",
    "prefix": "sbrtestb",
    "body": [
      "test('${1:Rendered in the DOM}', () => {",
      "\trender(<${2:${TM_FILENAME_BASE/.(?:test).*//gi}} />);",
      "\tconst ${3:${TM_FILENAME_BASE/.(?:test).*//gi}}El = screen.getBy${4:Role}('${5}');",
      "\texpect(${3:${TM_FILENAME_BASE/.(?:test).*//gi}}El).toHaveAttribute('${6:name}', ${2:${TM_FILENAME_BASE/.(?:test).*//gi}}.args?.${7:${6:name}});",
      "});"
    ],
    "description": "Single Test Block with Storybook, Jest and React (describe-test syntax)"
  },
  "Single Snapshot Test Block (describe-it) - React": {
    "scope": "javascript,javascriptreact,typescript,typescriptreact",
    "prefix": "sbritsnapb",
    "body": [
      "it('${1:Run Snapshot Test}', () => {",
      "\tconst ${3:${TM_FILENAME_BASE/.(?:test).*//gi}}El = renderer.create(<${2:${TM_FILENAME_BASE/.(?:test).*//gi}} />).toJSON();",
      "\texpect(${3:${TM_FILENAME_BASE/.(?:test).*//gi}}El).toMatchSnapshot();",
      "});"
    ],
    "description": "Single Snapshot Test Block with Storybook, Jest and React (describe-it syntax)"
  },
  "Single Snapshot Test Block (describe-test) - React": {
    "scope": "javascript,javascriptreact,typescript,typescriptreact",
    "prefix": "sbrtestsnapb",
    "body": [
      "test('${1:Run Snapshot Test}', () => {",
      "\tconst ${3:${TM_FILENAME_BASE/.(?:test).*//gi}}El = renderer.create(<${2:${TM_FILENAME_BASE/.(?:test).*//gi}} />).toJSON();",
      "\texpect(${3:${TM_FILENAME_BASE/.(?:test).*//gi}}El).toMatchSnapshot();",
      "});"
    ],
    "description": "Single Snapshot Test Block with Storybook, Jest and React (describe-test syntax)"
  },
  /*******************************************************************************/
  /** Single Test Block (Vue) **/
  /*******************************************************************************/
  "Single Test Block (describe-it) - Vue": {
    "scope": "javascript,typescript",
    "prefix": "sbvitb",
    "body": [
      "it('${1:Rendered in the DOM}', () => {",
      "\trender(<${2:${TM_FILENAME_BASE/.(?:test).*//gi}} />);",
      "\tconst ${3:${TM_FILENAME_BASE/.(?:test).*//gi}}El = screen.getBy${4:Role}('${5}');",
      "\texpect(${3:${TM_FILENAME_BASE/.(?:test).*//gi}}El).toHaveAttribute('${6:name}', ${2:${TM_FILENAME_BASE/.(?:test).*//gi}}.args?.${7:${6:name}});",
      "});"
    ],
    "description": "Single Test Block with Storybook, Jest and Vue (describe-it syntax)"
  },
  "Single Test Block (describe-test) - Vue": {
    "scope": "javascript,typescript",
    "prefix": "sbvtestb",
    "body": [
      "test('${1:Rendered in the DOM}', () => {",
      "\trender(<${2:${TM_FILENAME_BASE/.(?:test).*//gi}} />);",
      "\tconst ${3:${TM_FILENAME_BASE/.(?:test).*//gi}}El = screen.getBy${4:Role}('${5}');",
      "\texpect(${3:${TM_FILENAME_BASE/.(?:test).*//gi}}El).toHaveAttribute('${6:name}', ${2:${TM_FILENAME_BASE/.(?:test).*//gi}}.args?.${7:${6:name}});",
      "});"
    ],
    "description": "Single Test Block with Storybook, Jest and Vue (describe-test syntax)"
  },
  "Single Snapshot Test Block (describe-it) - Vue": {
    "scope": "javascript,typescript",
    "prefix": "sbvitsnapb",
    "body": [
      "it('${1:Run Snapshot Test}', () => {",
      "\tconst ${3:${TM_FILENAME_BASE/.(?:test).*//gi}}El = mount(${2:${TM_FILENAME_BASE/.(?:test).*//gi}});",
      "\texpect(${3:${TM_FILENAME_BASE/.(?:test).*//gi}}El).toMatchSnapshot();",
      "});"
    ],
    "description": "Single Snapshot Test Block with Storybook, Jest and Vue (describe-it syntax)"
  },
  "Single Snapshot Test Block (describe-test) - Vue": {
    "scope": "javascript,typescript",
    "prefix": "sbvtestsnapb",
    "body": [
      "test('${1:Run Snapshot Test}', () => {",
      "\tconst ${3:${TM_FILENAME_BASE/.(?:test).*//gi}}El = mount(${2:${TM_FILENAME_BASE/.(?:test).*//gi}});",
      "\texpect(${3:${TM_FILENAME_BASE/.(?:test).*//gi}}El).toMatchSnapshot();",
      "});"
    ],
    "description": "Single Snapshot Test Block with Storybook, Jest and Vue (describe-test syntax)"
  }
}
